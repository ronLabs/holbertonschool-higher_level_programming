The ``add_integer doctest`` module
===================================

Using ``add_integer``
___________________________________

Tests to run for task 0, add_integer. 

import function from module name:

    >>> add_integer = __import__('0-add_integer').add_integer

    Adding a regular set of integers:
    >>> add_integer(1, 2)
    3

    Adding one negative integer:
    >>> add_integer(100, -2)
    98

    Adding one integer, 'a' only:
    >>> add_integer(2)
    100

    Adding a floating point number and a negative number:
    >>> add_integer(100.3, -2)
    98

    Adding with no input:
    >>> add_integer()
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    Adding with an order of operation in 'a':
    >>> add_integer(2 + 4, 8)
    14

    Adding with order of operation in 'a' and no 'b':
    >>> add_integer(2 + 4)
    104

    Adding with order of operation in 'a' and the letter 'b':
    >>> add_integer(2 + 4, b)
    Traceback (most recent call last):
        ...
    NameError: name 'b' is not defined

    Adding one letter and one integer:
    >>> add_integer(e, 9)
    Traceback (most recent call last):
        ...
    NameError: name 'e' is not defined

    Adding an integer with letter and an integer:
    >>> add_integer(10x, 9)
    Traceback (most recent call last):
        ...
    SyntaxError: invalid syntax

    Adding integer 'a' with a comma and missing 'b':
    >>> add_integer(10,  )
    108

    Adding two integers with extra space after 'b':
    >>> add_integer(10, 2 )
    12

    Adding two negative numbers, one a floating point:
    >>> add_integer(-11, -20.00)
    -31

    Adding an integer with a string literal:
    >>> add_integer(3, "hello")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    Adding an integer and a string literal:
    >>> add_integer("3", 6)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
